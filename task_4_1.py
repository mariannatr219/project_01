# -*- coding: utf-8 -*-
"""task_4.1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xDuDrLctY-h1NF12t7UhaJ6B20IOwFP7
"""

# В базе данных teacher создайте таблицу Students

import sqlite3

connection = sqlite3.connect('teachers.db')
cursor = connection.cursor()
sqlquery ="""CREATE TABLE Students (
Student_Id INTEGER, 
Student_Name TEXT, 
School_Id INTEGER PRIMARY KEY
);"""

cursor.execute(sqlquery)
connection.commit()
connection.close()

# Наполните таблицу следующими данными:

# 201, Иван, 1
# 202, Петр, 2
# 203, Анастасия, 3
# 204, Игорь, 4

import sqlite3

connection = sqlite3.connect('teachers.db')
cursor = connection.cursor()
sqlquery ="""INSERT INTO Students
VALUES 
("201", "Иван", "1"),
("202", "Петр", "2"),
("203", "Анастасия", "3"),
("204", "Игорь", "4");

"""

cursor.execute(sqlquery)
connection.commit()
connection.close()

# Напишите программу, с помощью которой по ID студента можно получать информацию о школе и студенте.

# Формат вывода:

# ID Студента:
# Имя студента:
# ID школы:
# Название школы:

import sqlite3

def get_connection():
  connection = sqlite3.connect('teachers.db')
  return connection

def close_connection(connection):
  if connection:
    connection.close()
  
  
def get_student_detail(Student_id):
  try:
    connection = get_connection()
    cursor = connection.cursor()
    sqlquery = """SELECT Students.Student_Name, Students.Student_Id, Students.School_Id, School.School_name
    FROM Students
    JOIN School ON Students.school_id = School.school_id
    WHERE Student_id = ?;"""
    cursor.execute(sqlquery,(Student_id,))
    answer = cursor.fetchone()
    close_connection(connection)
    return answer
  except (Exception, sqlite3.Error) as error:
    print("Ошибка в получении данных ", error)

get_student_detail(201)